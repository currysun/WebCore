//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2016.03.12 at 01:33:38 PM CST 
//


package org.yiwan.webcore.locator;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for byType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="byType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="id"/&gt;
 *     &lt;enumeration value="name"/&gt;
 *     &lt;enumeration value="className"/&gt;
 *     &lt;enumeration value="tagName"/&gt;
 *     &lt;enumeration value="cssSelector"/&gt;
 *     &lt;enumeration value="xpath"/&gt;
 *     &lt;enumeration value="linkText"/&gt;
 *     &lt;enumeration value="partialLinkText"/&gt;
 *     &lt;enumeration value="javascript"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "byType")
@XmlEnum
public enum ByType {

    @XmlEnumValue("id")
    ID("id"),
    @XmlEnumValue("name")
    NAME("name"),
    @XmlEnumValue("className")
    CLASS_NAME("className"),
    @XmlEnumValue("tagName")
    TAG_NAME("tagName"),
    @XmlEnumValue("cssSelector")
    CSS_SELECTOR("cssSelector"),
    @XmlEnumValue("xpath")
    XPATH("xpath"),
    @XmlEnumValue("linkText")
    LINK_TEXT("linkText"),
    @XmlEnumValue("partialLinkText")
    PARTIAL_LINK_TEXT("partialLinkText"),
    @XmlEnumValue("javascript")
    JAVASCRIPT("javascript");
    private final String value;

    ByType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ByType fromValue(String v) {
        for (ByType c: ByType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
